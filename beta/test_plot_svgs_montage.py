#
#  This Python script assumes you have run 
#    * beta/test_build_samples.sh 
#    * beta/test_run_samples.py
#  (see their respective headers for info on running them).
#
# Dependency: ImageMagick
#
#  This script attempts to generate a montage of the final .svg file generated for
#  each sample project (generated by the 2nd script above) that are created in:
#
# output_biorobots/        output_hetero/           output_rules/
# output_cancer_biorobots/ output_interaction/      output_template/
# output_cancer_immune/    output_mechano/          output_virus_mac/
# output_celltypes3/       output_physimess/        output_worm/
# output_custom_division/  output_pred_prey/
#

import subprocess
import os
import glob
import time

output_dirs = ["output_template", "output_biorobots", "output_cancer_biorobots", "output_celltypes3", "output_hetero", "output_pred_prey", "output_virus_mac", "output_worm", "output_interaction", "output_mechano", "output_rules", "output_physimess", "output_custom_division"] 
# output_dirs = ["output_template"] 

# optionally the 3D model
output_dirs.append("output_cancer_immune")

all_svgs = []
count = 0
for outdir in output_dirs:
    svg_pattern = outdir + "/" + "*.svg"
    svg_files = glob.glob(svg_pattern)
    svg_files.sort()
    # print("svg_files= ",svg_files)
    all_svgs.append(svg_files[-1])
    count += 1

print("\n\nall_svgs= ",all_svgs)
print("-----------\n")
for k in range(count):
    cmd = ["convert"]
    cmd.append("-resize")
    cmd.append("300x")
    fname = all_svgs[k]
    cmd.append(fname)
    outfile = f'p{k:02}.jpg'
    cmd.append(outfile)
    print(cmd)
    p = subprocess.run(cmd)

print("To assemble the montage, run:")
print("montage -geometry +0+0 -tile 3x9 p*.jpg final_montage.jpg")
