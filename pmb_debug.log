DEBUG:root:pmb.py: Studio mode: Run,Plot,Legend tabs
INFO:numexpr.utils:Note: NumExpr detected 10 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
INFO:numexpr.utils:NumExpr defaulting to 8 threads.
DEBUG:root:self.current_dir = /Users/macklinp/GitHub/PhysiCell-fibers
DEBUG:root:self.pmb_root_dir = /Users/macklinp/GitHub/cecam23/code/PhysiCell-model-builder
DEBUG:root:self.config_dir = /Users/macklinp/GitHub/PhysiCell-fibers/config
DEBUG:root:=======================  microenv populate_tree  ======================= 
DEBUG:root:dc_ic_units =  mmHg
DEBUG:root:dc_bc_units = mmHg
DEBUG:root:bv = <Element 'boundary_value' at 0x1563d0590>
DEBUG:root:   -------- substrate:  dirichlet_xmin = 0
DEBUG:root:bv = <Element 'boundary_value' at 0x1563d05e0>
DEBUG:root:bv = <Element 'boundary_value' at 0x1563d0630>
DEBUG:root:bv = <Element 'boundary_value' at 0x1563d0680>
DEBUG:root:bv = <Element 'boundary_value' at 0x1563d06d0>
DEBUG:root:bv = <Element 'boundary_value' at 0x1563d0720>
DEBUG:root:------- options: <Element 'calculate_gradients' at 0x1563d0810>
DEBUG:root:------- options: <Element 'track_internalized_substrates_in_each_agent' at 0x1563d08b0>
DEBUG:root:------- options: <Element 'initial_condition' at 0x1563d0900>
DEBUG:root:------- options: <Element 'dirichlet_nodes' at 0x1563d09f0>
DEBUG:root:

=======================  leaving microenv populate_tree  =====================
DEBUG:root:
====================== create_cycle_tab ===================
DEBUG:root: new stacked widget: trate live -------------> 0
DEBUG:root: new stacked widget: trate Ki67 -------------> 1
DEBUG:root: new stacked widget: t02 -------------> 2
DEBUG:root: new stacked widget: trate_flowcyto -------------> 3
DEBUG:root: new stacked widget: flow cyto sep -------------> 4
DEBUG:root: new stacked widget: trate_quiescent -------------> 5
DEBUG:root: new stacked widget: duration live -------------> 6
DEBUG:root: new stacked widget: duration Ki67 -------------> 7
DEBUG:root: new stacked widget: t02 -------------> 8
DEBUG:root: new stacked widget: duration_flowcyto -------------> 9
DEBUG:root: new stacked widget: flow cyto sep -------------> 10
DEBUG:root: new stacked widget: duration_quiescent -------------> 11
DEBUG:root:intracellular is Unkown
DEBUG:root:pmb.py: first_cell_def_name= default
DEBUG:root:cell_def_tab.py: ------- fill_substrates_comboboxes
DEBUG:root: --> substrate
DEBUG:root:------ motility_substrate_changed_cb(): idx = 0
DEBUG:root:       motility_substrate_changed_cb(): self.current_cell_def = None
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = substrate
DEBUG:root:=======================  populate_tree_cell_defs(): ======================= 
DEBUG:root:    cell_def_tab.param_d = {}
DEBUG:root:

=======================  validate_cell_defs(): ======================= 
DEBUG:root:Checking default
DEBUG:root:=======================  end validate_cell_defs(): =======================


DEBUG:root:----- cell_def.tag= cell_definition
DEBUG:root:
--------new_interaction_params(): cdname_new= default
DEBUG:root:
--------new_intracellular_params(): cdname_new= default
DEBUG:root:------- new_custom_data_params() -----
DEBUG:root:
===== populate_tree():  cycle
DEBUG:root: >> cycle_path= .//cell_definition[1]//phenotype//cycle
DEBUG:root:   cycle code= 6
DEBUG:root: >> phase_transition_path 
DEBUG:root: >> phase_durations_path =.//cell_definition[1]//phenotype//cycle//phase_durations
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x1563d0c70>
DEBUG:root:phase_duration= <Element 'duration' at 0x1563d0cc0>
DEBUG:root:------------ sval for phase duration= 300.0
DEBUG:root:phase_duration= <Element 'duration' at 0x1563d0d10>
DEBUG:root:------------ sval for phase duration= 480
DEBUG:root:phase_duration= <Element 'duration' at 0x1563d0d60>
DEBUG:root:------------ sval for phase duration= 240
DEBUG:root:phase_duration= <Element 'duration' at 0x1563d0db0>
DEBUG:root:------------ sval for phase duration= 60
DEBUG:root:
===== populate_tree():  death
DEBUG:root:death_uep=<Element 'death' at 0x1563d0e00>
DEBUG:root:-------- parsing apoptosis!
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x1563d0ef0>
DEBUG:root:phase_duration= <Element 'duration' at 0x1563d0f90>
DEBUG:root:index= 0
DEBUG:root:-------- parsing necrosis!
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x1563d66d0>
DEBUG:root:<Element 'duration' at 0x1563d6770>
DEBUG:root:index= 0
DEBUG:root:<Element 'duration' at 0x1563d67c0>
DEBUG:root:index= 1
DEBUG:root:volume_path=.//cell_definition[1]//phenotype//volume//
DEBUG:root:
===== populate_tree():  mechanics
DEBUG:root:mechanics_path=.//cell_definition[1]//phenotype//mechanics//
DEBUG:root:---- cell_interactions_path= .//cell_definition[1]//phenotype//mechanics//cell_adhesion_affinities
DEBUG:root:---- found cell_adhesion_affinities_path:
DEBUG:root:--> {'default': '1.0'}
DEBUG:root:
===== populate_tree():  motility
DEBUG:root:motility_path=.//cell_definition[1]//phenotype//motility//
DEBUG:root:
----------- populate_tree_cell_defs.py: cell_def_name= default,  cell_def_tab.param_d[cell_def_name]["motility_chemotaxis_substrate"] = substrate
DEBUG:root:motility_advanced_chemotaxis_path= .//cell_definition[1]//phenotype//motility//options//advanced_chemotaxis//
DEBUG:root:chemotactic_sensitivity= {'substrate': '0.0'}
DEBUG:root:sensitivity_path= .//cell_definition[1]//phenotype//motility//options//advanced_chemotaxis//chemotactic_sensitivities
DEBUG:root:---- found chemotactic_sensitivities: <Element 'chemotactic_sensitivities' at 0x1563df040>
DEBUG:root:subelm=<Element 'chemotactic_sensitivity' at 0x1563df130>
DEBUG:root: chemotactic_sensitivity--> substrate = 0.0
DEBUG:root:{'substrate': '0.0'}
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = substrate
DEBUG:root:    motility_advanced_chemotaxis_substrate= substrate
DEBUG:root:   chemotactic_sensitivity = {'substrate': '0.0'}
DEBUG:root:----- chemo_sensitivity_changed() = 0.0
DEBUG:root:----- chemo_sensitivity_changed(): subname = substrate
DEBUG:root:     chemotactic_sensitivity (dict)= {'substrate': '0.0'}
DEBUG:root:
===== populate_tree():  secretion
DEBUG:root:secretion_path = .//cell_definition[1]//phenotype//secretion//
DEBUG:root:uep_secretion = <Element 'secretion' at 0x1563df220>
DEBUG:root:0) -- secretion substrate = substrate
DEBUG:root:------ done parsing secretion:
DEBUG:root:
===== populate_tree():  cell_interactions
DEBUG:root:---- cell_interactions_path= .//cell_definition[1]//phenotype//cell_interactions
DEBUG:root:---- found cell_interactions:
DEBUG:root:uep2= <Element 'live_phagocytosis_rates' at 0x1563df680>
DEBUG:root: live_phagocytosis_rate= {'default': '0.0'}
DEBUG:root: attack_rate= {'default': '0.0'}
DEBUG:root: fusion_rate= {'default': '0.0'}
DEBUG:root:------ done parsing cell_interactions:
DEBUG:root:---- transformation_rates_path = .//cell_definition[1]//phenotype//cell_transformations//transformation_rates
DEBUG:root: transformation_rate= {'default': '0.0'}
DEBUG:root:------ done parsing cell_transformations:
DEBUG:root:
===== populate_tree():  molecular
DEBUG:root:
===== populate_tree():  intracellular
DEBUG:root:------ done parsing intracellular:
DEBUG:root:
===== populate_tree():  custom data
DEBUG:root:uep_custom_data= <Element 'custom_data' at 0x1563dfd60>
DEBUG:root:--------------- populate_tree: (empty)custom_data = {}
DEBUG:root:var.attrib.keys() = dict_keys(['units', 'conserved', 'description'])
DEBUG:root:populate: cell_def_name= default --> custom_data: {'sample': ['1.0', False]}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> duration
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>duration
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:
----- update_motility_params():  cdname= default
DEBUG:root:     setting motility_substrate_dropdown (for cdname= default ) = substrate
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= default ) = substrate
DEBUG:root:    chemotactic_sensitivity= {'substrate': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = default
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = substrate
DEBUG:root:{'substrate': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:cell_def_tab.py: ------- fill_celltypes_comboboxes
DEBUG:root:

------------  user_params_tab: fill_gui --------------
DEBUG:root:uep_user_params= <Element 'user_parameters' at 0x1563dff90>
DEBUG:root:pmb.py: self.current_dir = /Users/macklinp/GitHub/PhysiCell-fibers
DEBUG:root:pmb.py: creating ICs, Run, and Plot tabs
DEBUG:matplotlib.pyplot:Loaded backend Qt5Agg version unknown.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMono.ttf', name='.SF NS Mono', style='normal', variant='normal', weight=295, stretch='normal', size='scalable')) = 10.14975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompact.ttf', name='.SF Compact', style='normal', variant='normal', weight=1000, stretch='normal', size='scalable')) = 10.62
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/PingFang.ttc', name='PingFang HK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 2.872272727272727
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactItalic.ttf', name='.SF Compact', style='italic', variant='normal', weight=1000, stretch='normal', size='scalable')) = 11.62
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.595454545454545
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.ttf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.ttf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.322727272727273
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMono.ttf', name='.SF NS Mono', style='normal', variant='normal', weight=295, stretch='normal', size='scalable')) = 10.14975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompact.ttf', name='.SF Compact', style='normal', variant='normal', weight=1000, stretch='normal', size='scalable')) = 10.62
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/PingFang.ttc', name='PingFang HK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 2.872272727272727
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactItalic.ttf', name='.SF Compact', style='italic', variant='normal', weight=1000, stretch='normal', size='scalable')) = 11.62
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.595454545454545
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.ttf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.ttf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.322727272727273
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:root:ics_tab.py: fill_celltype_combobox(): ['default']
DEBUG:root:ics_tab.py: fill_celltype_combobox(): ['default']
DEBUG:root:pmb.py: calling vis_tab.substrates_cbox_changed_cb(2)
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=7.0.
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMono.ttf', name='.SF NS Mono', style='normal', variant='normal', weight=295, stretch='normal', size='scalable')) = 10.14975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompact.ttf', name='.SF Compact', style='normal', variant='normal', weight=1000, stretch='normal', size='scalable')) = 10.62
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/PingFang.ttc', name='PingFang HK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 2.872272727272727
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactItalic.ttf', name='.SF Compact', style='italic', variant='normal', weight=1000, stretch='normal', size='scalable')) = 11.62
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.595454545454545
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.ttf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.ttf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.322727272727273
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=7.0 to DejaVu Sans ('/Users/macklinp/opt/anaconda3/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:root:
pmb.py: open_as_cb():  full_path_model_name =/Users/macklinp/GitHub/PhysiCell-fibers/config/PhysiCell_settings.xml
DEBUG:root:     filePath is valid
DEBUG:root:     len(full_path_model_name) = 69
DEBUG:root:pmb: show_sample_model(): self.config_file = /Users/macklinp/GitHub/PhysiCell-fibers/config/PhysiCell_settings.xml
DEBUG:root:=======================  microenv populate_tree  ======================= 
DEBUG:root:dc_ic_units =  mmHg
DEBUG:root:dc_bc_units = mmHg
DEBUG:root:bv = <Element 'boundary_value' at 0x1676a95e0>
DEBUG:root:   -------- substrate:  dirichlet_xmin = 0
DEBUG:root:bv = <Element 'boundary_value' at 0x1676a9860>
DEBUG:root:bv = <Element 'boundary_value' at 0x1676a9810>
DEBUG:root:bv = <Element 'boundary_value' at 0x1676a97c0>
DEBUG:root:bv = <Element 'boundary_value' at 0x1676a9a40>
DEBUG:root:bv = <Element 'boundary_value' at 0x1676a99f0>
DEBUG:root:------- options: <Element 'calculate_gradients' at 0x1676a9ae0>
DEBUG:root:------- options: <Element 'track_internalized_substrates_in_each_agent' at 0x1676a9a90>
DEBUG:root:------- options: <Element 'initial_condition' at 0x1676a9bd0>
DEBUG:root:------- options: <Element 'dirichlet_nodes' at 0x1676a9cc0>
DEBUG:root:

=======================  leaving microenv populate_tree  =====================
DEBUG:root:cell_def_tab.py: ------- fill_substrates_comboboxes
DEBUG:root:------ motility_substrate_changed_cb(): idx = -1
DEBUG:root:       motility_substrate_changed_cb(): self.current_cell_def = None
DEBUG:root:------ motility2_substrate_changed_cb(): idx = -1
DEBUG:root:   text (subname) = 
DEBUG:root:   subname is empty, return!
DEBUG:root: --> substrate
DEBUG:root:------ motility_substrate_changed_cb(): idx = 0
DEBUG:root:       motility_substrate_changed_cb(): self.current_cell_def = None
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = substrate
DEBUG:root:=======================  populate_tree_cell_defs(): ======================= 
DEBUG:root:    cell_def_tab.param_d = {}
DEBUG:root:

=======================  validate_cell_defs(): ======================= 
DEBUG:root:Checking ECM
DEBUG:root:=======================  end validate_cell_defs(): =======================


DEBUG:root:----- cell_def.tag= cell_definition
DEBUG:root:
--------new_interaction_params(): cdname_new= ECM
DEBUG:root:
--------new_intracellular_params(): cdname_new= ECM
DEBUG:root:------- new_custom_data_params() -----
DEBUG:root:
===== populate_tree():  cycle
DEBUG:root: >> cycle_path= .//cell_definition[1]//phenotype//cycle
DEBUG:root:   cycle code= 5
DEBUG:root: >> phase_transition_path 
DEBUG:root:<Element 'rate' at 0x16738e8b0>
DEBUG:root:--  cycle_live_trate00 0.000
DEBUG:root: >> phase_durations_path =.//cell_definition[1]//phenotype//cycle//phase_durations
DEBUG:root: >> pd_uep =None
DEBUG:root:
===== populate_tree():  death
DEBUG:root:death_uep=<Element 'death' at 0x16738ea90>
DEBUG:root:-------- parsing apoptosis!
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x16738e4a0>
DEBUG:root:phase_duration= <Element 'duration' at 0x16738ecc0>
DEBUG:root:index= 0
DEBUG:root:-------- parsing necrosis!
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x1063856d0>
DEBUG:root:<Element 'duration' at 0x166fa91d0>
DEBUG:root:index= 0
DEBUG:root:<Element 'duration' at 0x166fa9040>
DEBUG:root:index= 1
DEBUG:root:volume_path=.//cell_definition[1]//phenotype//volume//
DEBUG:root:
===== populate_tree():  mechanics
DEBUG:root:mechanics_path=.//cell_definition[1]//phenotype//mechanics//
DEBUG:root:---- cell_interactions_path= .//cell_definition[1]//phenotype//mechanics//cell_adhesion_affinities
DEBUG:root:---- found cell_adhesion_affinities_path:
DEBUG:root:--> {'ECM': '1'}
DEBUG:root:
===== populate_tree():  motility
DEBUG:root:motility_path=.//cell_definition[1]//phenotype//motility//
DEBUG:root:
----------- populate_tree_cell_defs.py: cell_def_name= ECM,  cell_def_tab.param_d[cell_def_name]["motility_chemotaxis_substrate"] = substrate
DEBUG:root:motility_advanced_chemotaxis_path= .//cell_definition[1]//phenotype//motility//options//advanced_chemotaxis//
DEBUG:root:chemotactic_sensitivity= {'substrate': '0.0'}
DEBUG:root:sensitivity_path= .//cell_definition[1]//phenotype//motility//options//advanced_chemotaxis//chemotactic_sensitivities
DEBUG:root:---- found chemotactic_sensitivities: <Element 'chemotactic_sensitivities' at 0x1673aa590>
DEBUG:root:subelm=<Element 'chemotactic_sensitivity' at 0x1673aa630>
DEBUG:root: chemotactic_sensitivity--> substrate = 0.0
DEBUG:root:{'substrate': '0.0'}
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = substrate
DEBUG:root:    motility_advanced_chemotaxis_substrate= substrate
DEBUG:root:   chemotactic_sensitivity = {'substrate': '0.0'}
DEBUG:root:
===== populate_tree():  secretion
DEBUG:root:secretion_path = .//cell_definition[1]//phenotype//secretion//
DEBUG:root:uep_secretion = <Element 'secretion' at 0x1673aa540>
DEBUG:root:0) -- secretion substrate = substrate
DEBUG:root:------ done parsing secretion:
DEBUG:root:
===== populate_tree():  cell_interactions
DEBUG:root:---- cell_interactions_path= .//cell_definition[1]//phenotype//cell_interactions
DEBUG:root:---- found cell_interactions:
DEBUG:root:uep2= <Element 'live_phagocytosis_rates' at 0x16739c720>
DEBUG:root: live_phagocytosis_rate= {'ECM': '0'}
DEBUG:root: attack_rate= {'ECM': '0'}
DEBUG:root: fusion_rate= {'ECM': '0'}
DEBUG:root:------ done parsing cell_interactions:
DEBUG:root:---- transformation_rates_path = .//cell_definition[1]//phenotype//cell_transformations//transformation_rates
DEBUG:root: transformation_rate= {'ECM': '0'}
DEBUG:root:------ done parsing cell_transformations:
DEBUG:root:
===== populate_tree():  molecular
DEBUG:root:
===== populate_tree():  intracellular
DEBUG:root:------ done parsing intracellular:
DEBUG:root:
===== populate_tree():  custom data
DEBUG:root:uep_custom_data= <Element 'custom_data' at 0x1676611d0>
DEBUG:root:--------------- populate_tree: (empty)custom_data = {}
DEBUG:root:var.attrib.keys() = dict_keys(['conserved', 'units', 'description'])
DEBUG:root:populate: cell_def_name= ECM --> custom_data: {'sample': ['1.0', False]}
DEBUG:root:
----- update_motility_params():  cdname= ECM
DEBUG:root:     setting motility_substrate_dropdown (for cdname= ECM ) = substrate
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= ECM ) = substrate
DEBUG:root:    chemotactic_sensitivity= {'substrate': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = ECM
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = substrate
DEBUG:root:{'substrate': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:cell_def_tab.py: ------- fill_celltypes_comboboxes
DEBUG:root:ics_tab.py: fill_celltype_combobox(): ['ECM']
DEBUG:root:

------------  user_params_tab: fill_gui --------------
DEBUG:root:uep_user_params= <Element 'user_parameters' at 0x1676616d0>
DEBUG:root:
--------new_interaction_params(): cdname_new= cell_def03
DEBUG:root:
--------new_intracellular_params(): cdname_new= cell_def03
DEBUG:root:------- new_custom_data_params() -----
DEBUG:root:num_vals = 1
DEBUG:root:sample, ['1.0', False]
DEBUG:root:cell_def_tab.py: ------- add_new_celltype_comboboxes cell_def03
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> transition rate
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>transition rate
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:key 0= ECM
DEBUG:root:keys 1= dict_keys(['ECM', 'cell_def03'])
DEBUG:root:keys 2= dict_keys(['ECM', 'cell_def03'])
DEBUG:root:
----- update_motility_params():  cdname= cell_def03
DEBUG:root:     setting motility_substrate_dropdown (for cdname= cell_def03 ) = substrate
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= cell_def03 ) = substrate
DEBUG:root:    chemotactic_sensitivity= {'substrate': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = cell_def03
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = substrate
DEBUG:root:{'substrate': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:key 0= ECM
DEBUG:root:keys 1= dict_keys(['ECM', 'cell_def03'])
DEBUG:root:keys 2= dict_keys(['ECM', 'cell_def03'])
DEBUG:root:
----- update_motility_params():  cdname= cell_def03
DEBUG:root:     setting motility_substrate_dropdown (for cdname= cell_def03 ) = substrate
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= cell_def03 ) = substrate
DEBUG:root:    chemotactic_sensitivity= {'substrate': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = cell_def03
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = substrate
DEBUG:root:{'substrate': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:key 0= ECM
DEBUG:root:keys 1= dict_keys(['ECM', 'cell_def03'])
DEBUG:root:keys 2= dict_keys(['ECM', 'cell_def03'])
DEBUG:root:
----- update_motility_params():  cdname= cell_def03
DEBUG:root:     setting motility_substrate_dropdown (for cdname= cell_def03 ) = substrate
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= cell_def03 ) = substrate
DEBUG:root:    chemotactic_sensitivity= {'substrate': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = cell_def03
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = substrate
DEBUG:root:{'substrate': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:--------- tree_item_changed_cb(): <PyQt5.QtWidgets.QTreeWidgetItem object at 0x1676cea60>, 0, pusher
DEBUG:root:prev_name= cell_def03
DEBUG:root:new name= pusher
DEBUG:root:cell_def_tab.py: ------- renamed_celltype() cell_def03 -> pusher
DEBUG:root:    self.celltypes_list= ['ECM', 'pusher']
DEBUG:root: 
DEBUG:root:{'secretion': {'substrate': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}, 'chemotactic_sensitivity': {'substrate': '0.0'}, 'cell_adhesion_affinity': {'ECM': '1', 'cell_def03': '1.0'}, 'transformation_rate': {'ECM': '0', 'default': '0', '': '0.0', 'cell_def03': '0.0'}, 'live_phagocytosis_rate': {'ECM': '0', 'default': '0', '': '0.0', 'cell_def03': '0.0'}, 'attack_rate': {'ECM': '0', 'default': '0', '': '0.0', 'cell_def03': '0.0'}, 'fusion_rate': {'ECM': '0', 'default': '0', '': '0.0', 'cell_def03': '0.0'}, 'cycle_choice_idx': 0, 'cycle_live_trate00': '0.000', 'cycle_Ki67_trate01': '3.63108e-3', 'cycle_Ki67_trate10': '1.07527e-3', 'cycle_advancedKi67_trate01': '4.60405e-3', 'cycle_advancedKi67_trate12': '1.28205e-3', 'cycle_advancedKi67_trate20': '6.66666e-3', 'cycle_flowcyto_trate01': '0.00324', 'cycle_flowcyto_trate12': '0.00208', 'cycle_flowcyto_trate20': '0.00333', 'cycle_flowcytosep_trate01': '0.00335', 'cycle_flowcytosep_trate12': '0.00208', 'cycle_flowcytosep_trate23': '0.00417', 'cycle_flowcytosep_trate30': '0.01667', 'cycle_quiescent_trate01': '3.63108e-3', 'cycle_quiescent_trate10': '1.07527e-3', 'cycle_live_duration00': '9.e9', 'cycle_Ki67_duration01': '275.40015', 'cycle_Ki67_duration10': '929.99898', 'cycle_advancedKi67_duration01': '217.20007', 'cycle_advancedKi67_duration12': '780.00078', 'cycle_advancedKi67_duration20': '150.00015', 'cycle_flowcyto_duration01': '308.64198', 'cycle_flowcyto_duration12': '480.76923', 'cycle_flowcyto_duration20': '300.30030', 'cycle_flowcytosep_duration01': '298.50746', 'cycle_flowcytosep_duration12': '480.76923', 'cycle_flowcytosep_duration23': '239.80815', 'cycle_flowcytosep_duration30': '59.88024', 'cycle_quiescent_duration01': '275.40016', 'cycle_quiescent_duration10': '929.99898', 'cycle_live_trate00_fixed': False, 'cycle_Ki67_trate01_fixed': False, 'cycle_Ki67_trate10_fixed': True, 'cycle_advancedKi67_trate01_fixed': False, 'cycle_advancedKi67_trate12_fixed': True, 'cycle_advancedKi67_trate20_fixed': True, 'cycle_flowcyto_trate01_fixed': False, 'cycle_flowcyto_trate12_fixed': False, 'cycle_flowcyto_trate20_fixed': False, 'cycle_flowcytosep_trate01_fixed': False, 'cycle_flowcytosep_trate12_fixed': False, 'cycle_flowcytosep_trate23_fixed': False, 'cycle_flowcytosep_trate30_fixed': False, 'cycle_quiescent_trate01_fixed': False, 'cycle_quiescent_trate10_fixed': True, 'cycle_live_duration00_fixed': False, 'cycle_Ki67_duration01_fixed': False, 'cycle_Ki67_duration10_fixed': True, 'cycle_advancedKi67_duration01_fixed': False, 'cycle_advancedKi67_duration12_fixed': True, 'cycle_advancedKi67_duration20_fixed': True, 'cycle_flowcyto_duration01_fixed': False, 'cycle_flowcyto_duration12_fixed': False, 'cycle_flowcyto_duration20_fixed': False, 'cycle_flowcytosep_duration01_fixed': False, 'cycle_flowcytosep_duration12_fixed': False, 'cycle_flowcytosep_duration23_fixed': False, 'cycle_flowcytosep_duration30_fixed': False, 'cycle_quiescent_duration01_fixed': False, 'cycle_quiescent_duration10_fixed': True, 'death_rate': '5.31667e-05', 'apoptosis_death_rate': '0', 'apoptosis_phase0_duration': '516', 'apoptosis_phase0_fixed': True, 'apoptosis_duration_flag': True, 'apoptosis_unlysed_rate': '0.05', 'apoptosis_lysed_rate': '0', 'apoptosis_cyto_rate': '1.66667e-02', 'apoptosis_nuclear_rate': '5.83333e-03', 'apoptosis_calcif_rate': '0', 'apoptosis_rel_rupture_volume': '2.0', 'necrosis_death_rate': '0.0', 'necrosis_trate01': '9.e9', 'necrosis_trate01_fixed': True, 'necrosis_trate12': '0.000012', 'necrosis_trate12_fixed': True, 'necrosis_duration_flag': True, 'necrosis_phase0_duration': '0', 'necrosis_phase0_fixed': True, 'necrosis_phase1_duration': '86400', 'necrosis_phase1_fixed': True, 'necrosis_unlysed_rate': '0.05', 'necrosis_lysed_rate': '0', 'necrosis_cyto_rate': '1.66667e-02', 'necrosis_nuclear_rate': '5.83333e-03', 'necrosis_calcif_rate': '0', 'necrosis_rel_rupture_rate': '2.0', 'volume_total': '2494', 'volume_fluid_fraction': '0.75', 'volume_nuclear': '540', 'volume_fluid_change_rate': '0.05', 'volume_cytoplasmic_rate': '0.0045', 'volume_nuclear_rate': '0.0055', 'volume_calcif_fraction': '0', 'volume_calcif_rate': '0', 'volume_rel_rupture_vol': '2.0', 'is_movable': True, 'mechanics_adhesion': '0.4', 'mechanics_repulsion': '10.0', 'mechanics_adhesion_distance': '1.25', 'mechanics_relative_equilibrium_distance': '1.8', 'mechanics_absolute_equilibrium_distance': '15.12', 'mechanics_relative_equilibrium_distance_enabled': False, 'mechanics_absolute_equilibrium_distance_enabled': False, 'speed': '1', 'persistence_time': '1', 'migration_bias': '0', 'motility_enabled': True, 'motility_use_2D': True, 'motility_chemotaxis': False, 'motility_chemotaxis_towards': True, 'motility_advanced_chemotaxis': False, 'normalize_each_gradient': False, 'dead_phagocytosis_rate': '0', 'damage_rate': '1', 'intracellular': None, 'ID': '0', 'cycle': 'live cells', 'cycle_duration_flag': False, 'apoptosis_trate01': '0.001938', 'apoptosis_trate01_fixed': True, 'mechanics_BM_adhesion': '4.0', 'mechanics_BM_repulsion': '10.0', 'mechanics_elastic_constant': '0.01', 'mechanics_attachment_rate': '10.0', 'mechanics_detachment_rate': '0.0', 'motility_chemotaxis_substrate': 'substrate', 'motility_advanced_chemotaxis_substrate': 'substrate', 'custom_data': {'sample': ['1.0', False]}}
DEBUG:root:
----
DEBUG:root:{'secretion': {'substrate': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}, 'chemotactic_sensitivity': {'substrate': '0.0'}, 'cell_adhesion_affinity': {'ECM': '1.0', 'cell_def03': '1.0'}, 'transformation_rate': {'ECM': '0.0', 'default': '0', '': '0.0', 'cell_def03': '0.0'}, 'live_phagocytosis_rate': {'ECM': '0.0', 'default': '0', '': '0.0', 'cell_def03': '0.0'}, 'attack_rate': {'ECM': '0.0', 'default': '0', '': '0.0', 'cell_def03': '0.0'}, 'fusion_rate': {'ECM': '0.0', 'default': '0', '': '0.0', 'cell_def03': '0.0'}, 'cycle_choice_idx': 0, 'cycle_live_trate00': '0.00072', 'cycle_Ki67_trate01': '3.63108e-3', 'cycle_Ki67_trate10': '1.07527e-3', 'cycle_advancedKi67_trate01': '4.60405e-3', 'cycle_advancedKi67_trate12': '1.28205e-3', 'cycle_advancedKi67_trate20': '6.66666e-3', 'cycle_flowcyto_trate01': '0.00324', 'cycle_flowcyto_trate12': '0.00208', 'cycle_flowcyto_trate20': '0.00333', 'cycle_flowcytosep_trate01': '0.00335', 'cycle_flowcytosep_trate12': '0.00208', 'cycle_flowcytosep_trate23': '0.00417', 'cycle_flowcytosep_trate30': '0.01667', 'cycle_quiescent_trate01': '3.63108e-3', 'cycle_quiescent_trate10': '1.07527e-3', 'cycle_live_duration00': '1388.88889', 'cycle_Ki67_duration01': '275.40015', 'cycle_Ki67_duration10': '929.99898', 'cycle_advancedKi67_duration01': '217.20007', 'cycle_advancedKi67_duration12': '780.00078', 'cycle_advancedKi67_duration20': '150.00015', 'cycle_flowcyto_duration01': '308.64198', 'cycle_flowcyto_duration12': '480.76923', 'cycle_flowcyto_duration20': '300.30030', 'cycle_flowcytosep_duration01': '298.50746', 'cycle_flowcytosep_duration12': '480.76923', 'cycle_flowcytosep_duration23': '239.80815', 'cycle_flowcytosep_duration30': '59.88024', 'cycle_quiescent_duration01': '275.40016', 'cycle_quiescent_duration10': '929.99898', 'cycle_live_trate00_fixed': False, 'cycle_Ki67_trate01_fixed': False, 'cycle_Ki67_trate10_fixed': True, 'cycle_advancedKi67_trate01_fixed': False, 'cycle_advancedKi67_trate12_fixed': True, 'cycle_advancedKi67_trate20_fixed': True, 'cycle_flowcyto_trate01_fixed': False, 'cycle_flowcyto_trate12_fixed': False, 'cycle_flowcyto_trate20_fixed': False, 'cycle_flowcytosep_trate01_fixed': False, 'cycle_flowcytosep_trate12_fixed': False, 'cycle_flowcytosep_trate23_fixed': False, 'cycle_flowcytosep_trate30_fixed': False, 'cycle_quiescent_trate01_fixed': False, 'cycle_quiescent_trate10_fixed': True, 'cycle_live_duration00_fixed': False, 'cycle_Ki67_duration01_fixed': False, 'cycle_Ki67_duration10_fixed': True, 'cycle_advancedKi67_duration01_fixed': False, 'cycle_advancedKi67_duration12_fixed': True, 'cycle_advancedKi67_duration20_fixed': True, 'cycle_flowcyto_duration01_fixed': False, 'cycle_flowcyto_duration12_fixed': False, 'cycle_flowcyto_duration20_fixed': False, 'cycle_flowcytosep_duration01_fixed': False, 'cycle_flowcytosep_duration12_fixed': False, 'cycle_flowcytosep_duration23_fixed': False, 'cycle_flowcytosep_duration30_fixed': False, 'cycle_quiescent_duration01_fixed': False, 'cycle_quiescent_duration10_fixed': True, 'death_rate': '5.31667e-05', 'apoptosis_death_rate': '5.31667e-05', 'apoptosis_phase0_duration': '516', 'apoptosis_phase0_fixed': False, 'apoptosis_duration_flag': False, 'apoptosis_unlysed_rate': '0.05', 'apoptosis_lysed_rate': '0', 'apoptosis_cyto_rate': '1.66667e-02', 'apoptosis_nuclear_rate': '5.83333e-03', 'apoptosis_calcif_rate': '0', 'apoptosis_rel_rupture_volume': '2.0', 'necrosis_death_rate': '0.0', 'necrosis_trate01': '9e9', 'necrosis_trate01_fixed': False, 'necrosis_trate12': '1.15741e-05', 'necrosis_trate12_fixed': True, 'necrosis_duration_flag': False, 'necrosis_phase0_duration': '1.11111e-10', 'necrosis_phase0_fixed': False, 'necrosis_phase1_duration': '86399.80646', 'necrosis_phase1_fixed': True, 'necrosis_unlysed_rate': '1.11667e-02', 'necrosis_lysed_rate': '8.33333e-4', 'necrosis_cyto_rate': '5.33333e-05', 'necrosis_nuclear_rate': '2.16667e-4', 'necrosis_calcif_rate': '7e-05', 'necrosis_rel_rupture_rate': '2.0', 'volume_total': '2494', 'volume_fluid_fraction': '0.75', 'volume_nuclear': '540', 'volume_fluid_change_rate': '0.05', 'volume_cytoplasmic_rate': '0.0045', 'volume_nuclear_rate': '0.0055', 'volume_calcif_fraction': '0.0', 'volume_calcif_rate': '0.0', 'volume_rel_rupture_vol': '2', 'is_movable': False, 'mechanics_adhesion': '0.4', 'mechanics_repulsion': '10.0', 'mechanics_adhesion_distance': '1.25', 'mechanics_relative_equilibrium_distance': '1.8', 'mechanics_absolute_equilibrium_distance': '15.12', 'mechanics_relative_equilibrium_distance_enabled': False, 'mechanics_absolute_equilibrium_distance_enabled': False, 'speed': '1.0', 'persistence_time': '1.0', 'migration_bias': '0.0', 'motility_enabled': False, 'motility_use_2D': True, 'motility_chemotaxis': False, 'motility_chemotaxis_towards': True, 'motility_advanced_chemotaxis': False, 'normalize_each_gradient': False, 'dead_phagocytosis_rate': '0.0', 'damage_rate': '1.0', 'intracellular': None, 'ID': '3', 'cycle': 'live cells', 'cycle_duration_flag': False, 'apoptosis_trate01': '0.001938', 'apoptosis_trate01_fixed': False, 'mechanics_BM_adhesion': '4.0', 'mechanics_BM_repulsion': '10.0', 'mechanics_elastic_constant': '0.01', 'mechanics_attachment_rate': '10.0', 'mechanics_detachment_rate': '0.0', 'motility_chemotaxis_substrate': 'substrate', 'motility_advanced_chemotaxis_substrate': 'substrate', 'custom_data': {'sample': ['0.0', False]}}
DEBUG:root:
----
DEBUG:root:--- renaming all dicts with cell defs
DEBUG:root:--- cdname = ECM
DEBUG:root:--- cdname = pusher
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['substrate']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:matched! substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): substrate = substrate 


DEBUG:root:fill_xml_motility(): {'substrate': '0.0'}
DEBUG:root:substrate  --> 0.0
DEBUG:root:self.substrate_list = ['substrate']
DEBUG:root:substrate = substrate
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): substrate = substrate 


DEBUG:root:fill_xml_motility(): {'substrate': '0.0'}
DEBUG:root:substrate  --> 0.0
DEBUG:root:self.substrate_list = ['substrate']
DEBUG:root:substrate = substrate
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> duration
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>duration
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:key 0= pusher
DEBUG:root:keys 1= dict_keys(['ECM', 'pusher'])
DEBUG:root:keys 2= dict_keys(['ECM', 'pusher'])
DEBUG:root:
----- update_motility_params():  cdname= ECM
DEBUG:root:     setting motility_substrate_dropdown (for cdname= ECM ) = substrate
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= ECM ) = substrate
DEBUG:root:    chemotactic_sensitivity= {'substrate': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = ECM
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = substrate
DEBUG:root:{'substrate': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> transition rate
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>transition rate
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:key 0= pusher
DEBUG:root:keys 1= dict_keys(['ECM', 'pusher'])
DEBUG:root:keys 2= dict_keys(['ECM', 'pusher'])
DEBUG:root:
----- update_motility_params():  cdname= pusher
DEBUG:root:     setting motility_substrate_dropdown (for cdname= pusher ) = substrate
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= pusher ) = substrate
DEBUG:root:    chemotactic_sensitivity= {'substrate': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = pusher
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = substrate
DEBUG:root:{'substrate': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['substrate']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:matched! substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): substrate = substrate 


DEBUG:root:fill_xml_motility(): {'substrate': '0.0'}
DEBUG:root:substrate  --> 0.0
DEBUG:root:self.substrate_list = ['substrate']
DEBUG:root:substrate = substrate
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): substrate = substrate 


DEBUG:root:fill_xml_motility(): {'substrate': '0.0'}
DEBUG:root:substrate  --> 0.0
DEBUG:root:self.substrate_list = ['substrate']
DEBUG:root:substrate = substrate
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['substrate']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:matched! substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): substrate = substrate 


DEBUG:root:fill_xml_motility(): {'substrate': '0.0'}
DEBUG:root:substrate  --> 0.0
DEBUG:root:self.substrate_list = ['substrate']
DEBUG:root:substrate = substrate
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): substrate = substrate 


DEBUG:root:fill_xml_motility(): {'substrate': '0.0'}
DEBUG:root:substrate  --> 0.0
DEBUG:root:self.substrate_list = ['substrate']
DEBUG:root:substrate = substrate
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['substrate']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:matched! substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): substrate = substrate 


DEBUG:root:fill_xml_motility(): {'substrate': '0.0'}
DEBUG:root:substrate  --> 0.0
DEBUG:root:self.substrate_list = ['substrate']
DEBUG:root:substrate = substrate
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): substrate = substrate 


DEBUG:root:fill_xml_motility(): {'substrate': '0.0'}
DEBUG:root:substrate  --> 0.0
DEBUG:root:self.substrate_list = ['substrate']
DEBUG:root:substrate = substrate
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> duration
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>duration
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:key 0= pusher
DEBUG:root:keys 1= dict_keys(['ECM', 'pusher'])
DEBUG:root:keys 2= dict_keys(['ECM', 'pusher'])
DEBUG:root:
----- update_motility_params():  cdname= ECM
DEBUG:root:     setting motility_substrate_dropdown (for cdname= ECM ) = substrate
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= ECM ) = substrate
DEBUG:root:    chemotactic_sensitivity= {'substrate': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = ECM
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = substrate
DEBUG:root:{'substrate': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['substrate']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:matched! substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): substrate = substrate 


DEBUG:root:fill_xml_motility(): {'substrate': '0.0'}
DEBUG:root:substrate  --> 0.0
DEBUG:root:self.substrate_list = ['substrate']
DEBUG:root:substrate = substrate
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): substrate = substrate 


DEBUG:root:fill_xml_motility(): {'substrate': '0.0'}
DEBUG:root:substrate  --> 0.0
DEBUG:root:self.substrate_list = ['substrate']
DEBUG:root:substrate = substrate
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> transition rate
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>transition rate
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:key 0= pusher
DEBUG:root:keys 1= dict_keys(['ECM', 'pusher'])
DEBUG:root:keys 2= dict_keys(['ECM', 'pusher'])
DEBUG:root:
----- update_motility_params():  cdname= pusher
DEBUG:root:     setting motility_substrate_dropdown (for cdname= pusher ) = substrate
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= pusher ) = substrate
DEBUG:root:    chemotactic_sensitivity= {'substrate': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = pusher
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = substrate
DEBUG:root:{'substrate': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['substrate']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:matched! substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): substrate = substrate 


DEBUG:root:fill_xml_motility(): {'substrate': '0.0'}
DEBUG:root:substrate  --> 0.0
DEBUG:root:self.substrate_list = ['substrate']
DEBUG:root:substrate = substrate
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): substrate = substrate 


DEBUG:root:fill_xml_motility(): {'substrate': '0.0'}
DEBUG:root:substrate  --> 0.0
DEBUG:root:self.substrate_list = ['substrate']
DEBUG:root:substrate = substrate
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['substrate']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:matched! substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): substrate = substrate 


DEBUG:root:fill_xml_motility(): {'substrate': '0.0'}
DEBUG:root:substrate  --> 0.0
DEBUG:root:self.substrate_list = ['substrate']
DEBUG:root:substrate = substrate
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): substrate = substrate 


DEBUG:root:fill_xml_motility(): {'substrate': '0.0'}
DEBUG:root:substrate  --> 0.0
DEBUG:root:self.substrate_list = ['substrate']
DEBUG:root:substrate = substrate
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> duration
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>duration
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:key 0= pusher
DEBUG:root:keys 1= dict_keys(['ECM', 'pusher'])
DEBUG:root:keys 2= dict_keys(['ECM', 'pusher'])
DEBUG:root:
----- update_motility_params():  cdname= ECM
DEBUG:root:     setting motility_substrate_dropdown (for cdname= ECM ) = substrate
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= ECM ) = substrate
DEBUG:root:    chemotactic_sensitivity= {'substrate': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = ECM
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = substrate
DEBUG:root:{'substrate': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x1563c8590>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['substrate']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:matched! substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): substrate = substrate 


DEBUG:root:fill_xml_motility(): {'substrate': '0.0'}
DEBUG:root:substrate  --> 0.0
DEBUG:root:self.substrate_list = ['substrate']
DEBUG:root:substrate = substrate
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): substrate = substrate 


DEBUG:root:fill_xml_motility(): {'substrate': '0.0'}
DEBUG:root:substrate  --> 0.0
DEBUG:root:self.substrate_list = ['substrate']
DEBUG:root:substrate = substrate
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['substrate']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = substrate
DEBUG:root:matched! substrate
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): substrate = substrate 


DEBUG:root:fill_xml_motility(): {'substrate': '0.0'}
DEBUG:root:substrate  --> 0.0
DEBUG:root:self.substrate_list = ['substrate']
DEBUG:root:substrate = substrate
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): substrate = substrate 


DEBUG:root:fill_xml_motility(): {'substrate': '0.0'}
DEBUG:root:substrate  --> 0.0
DEBUG:root:self.substrate_list = ['substrate']
DEBUG:root:substrate = substrate
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> transition rate
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>transition rate
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:key 0= pusher
DEBUG:root:keys 1= dict_keys(['ECM', 'pusher'])
DEBUG:root:keys 2= dict_keys(['ECM', 'pusher'])
DEBUG:root:
----- update_motility_params():  cdname= pusher
DEBUG:root:     setting motility_substrate_dropdown (for cdname= pusher ) = quorum factor
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= pusher ) = quorum factor
DEBUG:root:    chemotactic_sensitivity= {'quorum factor': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = pusher
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = quorum factor
DEBUG:root:{'quorum factor': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:key 0= pusher
DEBUG:root:keys 1= dict_keys(['ECM', 'pusher'])
DEBUG:root:keys 2= dict_keys(['ECM', 'pusher'])
DEBUG:root:
----- update_motility_params():  cdname= pusher
DEBUG:root:     setting motility_substrate_dropdown (for cdname= pusher ) = quorum factor
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= pusher ) = quorum factor
DEBUG:root:    chemotactic_sensitivity= {'quorum factor': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = pusher
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = quorum factor
DEBUG:root:{'quorum factor': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> duration
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>duration
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:key 0= pusher
DEBUG:root:keys 1= dict_keys(['ECM', 'pusher'])
DEBUG:root:keys 2= dict_keys(['ECM', 'pusher'])
DEBUG:root:
----- update_motility_params():  cdname= ECM
DEBUG:root:     setting motility_substrate_dropdown (for cdname= ECM ) = quorum factor
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= ECM ) = quorum factor
DEBUG:root:    chemotactic_sensitivity= {'quorum factor': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = ECM
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = quorum factor
DEBUG:root:{'quorum factor': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x1563c8590>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x1563c8590>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:key 0= pusher
DEBUG:root:keys 1= dict_keys(['ECM', 'pusher'])
DEBUG:root:keys 2= dict_keys(['ECM', 'pusher'])
DEBUG:root:
----- update_motility_params():  cdname= ECM
DEBUG:root:     setting motility_substrate_dropdown (for cdname= ECM ) = quorum factor
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= ECM ) = quorum factor
DEBUG:root:    chemotactic_sensitivity= {'quorum factor': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = ECM
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = quorum factor
DEBUG:root:{'quorum factor': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> transition rate
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>transition rate
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:key 0= pusher
DEBUG:root:keys 1= dict_keys(['ECM', 'pusher'])
DEBUG:root:keys 2= dict_keys(['ECM', 'pusher'])
DEBUG:root:
----- update_motility_params():  cdname= pusher
DEBUG:root:     setting motility_substrate_dropdown (for cdname= pusher ) = quorum factor
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= pusher ) = quorum factor
DEBUG:root:    chemotactic_sensitivity= {'quorum factor': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = pusher
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = quorum factor
DEBUG:root:{'quorum factor': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> duration
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>duration
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:key 0= pusher
DEBUG:root:keys 1= dict_keys(['ECM', 'pusher'])
DEBUG:root:keys 2= dict_keys(['ECM', 'pusher'])
DEBUG:root:
----- update_motility_params():  cdname= ECM
DEBUG:root:     setting motility_substrate_dropdown (for cdname= ECM ) = quorum factor
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= ECM ) = quorum factor
DEBUG:root:    chemotactic_sensitivity= {'quorum factor': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = ECM
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = quorum factor
DEBUG:root:{'quorum factor': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> transition rate
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>transition rate
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:key 0= pusher
DEBUG:root:keys 1= dict_keys(['ECM', 'pusher'])
DEBUG:root:keys 2= dict_keys(['ECM', 'pusher'])
DEBUG:root:
----- update_motility_params():  cdname= pusher
DEBUG:root:     setting motility_substrate_dropdown (for cdname= pusher ) = quorum factor
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= pusher ) = quorum factor
DEBUG:root:    chemotactic_sensitivity= {'quorum factor': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = pusher
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = quorum factor
DEBUG:root:{'quorum factor': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> duration
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>duration
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:key 0= pusher
DEBUG:root:keys 1= dict_keys(['ECM', 'pusher'])
DEBUG:root:keys 2= dict_keys(['ECM', 'pusher'])
DEBUG:root:
----- update_motility_params():  cdname= ECM
DEBUG:root:     setting motility_substrate_dropdown (for cdname= ECM ) = quorum factor
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= ECM ) = quorum factor
DEBUG:root:    chemotactic_sensitivity= {'quorum factor': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = ECM
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = quorum factor
DEBUG:root:{'quorum factor': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x1563c8590>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 1.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', '': '0.0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:
pmb.py: open_as_cb():  full_path_model_name =/Users/macklinp/GitHub/PhysiCell-fibers/config/PhysiCell_settings.xml
DEBUG:root:     filePath is valid
DEBUG:root:     len(full_path_model_name) = 69
DEBUG:root:pmb: show_sample_model(): self.config_file = /Users/macklinp/GitHub/PhysiCell-fibers/config/PhysiCell_settings.xml
DEBUG:root:=======================  microenv populate_tree  ======================= 
DEBUG:root:dc_ic_units =  mmHg
DEBUG:root:dc_bc_units = mmHg
DEBUG:root:bv = <Element 'boundary_value' at 0x168112270>
DEBUG:root:   -------- quorum factor:  dirichlet_xmin = 0
DEBUG:root:bv = <Element 'boundary_value' at 0x1681126d0>
DEBUG:root:bv = <Element 'boundary_value' at 0x168112450>
DEBUG:root:bv = <Element 'boundary_value' at 0x168112cc0>
DEBUG:root:bv = <Element 'boundary_value' at 0x1681121d0>
DEBUG:root:bv = <Element 'boundary_value' at 0x168112860>
DEBUG:root:------- options: <Element 'calculate_gradients' at 0x168112220>
DEBUG:root:------- options: <Element 'track_internalized_substrates_in_each_agent' at 0x168112c70>
DEBUG:root:------- options: <Element 'initial_condition' at 0x168112360>
DEBUG:root:------- options: <Element 'dirichlet_nodes' at 0x168112d60>
DEBUG:root:

=======================  leaving microenv populate_tree  =====================
DEBUG:root:cell_def_tab.py: ------- fill_substrates_comboboxes
DEBUG:root:------ motility_substrate_changed_cb(): idx = -1
DEBUG:root:       motility_substrate_changed_cb(): self.current_cell_def = None
DEBUG:root:------ motility2_substrate_changed_cb(): idx = -1
DEBUG:root:   text (subname) = 
DEBUG:root:   subname is empty, return!
DEBUG:root: --> quorum factor
DEBUG:root:------ motility_substrate_changed_cb(): idx = 0
DEBUG:root:       motility_substrate_changed_cb(): self.current_cell_def = None
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = quorum factor
DEBUG:root:=======================  populate_tree_cell_defs(): ======================= 
DEBUG:root:    cell_def_tab.param_d = {}
DEBUG:root:

=======================  validate_cell_defs(): ======================= 
DEBUG:root:Checking ECM
DEBUG:root:Checking pusher
DEBUG:root:=======================  end validate_cell_defs(): =======================


DEBUG:root:----- cell_def.tag= cell_definition
DEBUG:root:
--------new_interaction_params(): cdname_new= ECM
DEBUG:root:
--------new_intracellular_params(): cdname_new= ECM
DEBUG:root:------- new_custom_data_params() -----
DEBUG:root:
===== populate_tree():  cycle
DEBUG:root: >> cycle_path= .//cell_definition[1]//phenotype//cycle
DEBUG:root:   cycle code= 5
DEBUG:root: >> phase_transition_path 
DEBUG:root:<Element 'rate' at 0x168112040>
DEBUG:root:--  cycle_live_trate00 0.000
DEBUG:root: >> phase_durations_path =.//cell_definition[1]//phenotype//cycle//phase_durations
DEBUG:root: >> pd_uep =None
DEBUG:root:
===== populate_tree():  death
DEBUG:root:death_uep=<Element 'death' at 0x168112b80>
DEBUG:root:-------- parsing apoptosis!
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x16773ddb0>
DEBUG:root:phase_duration= <Element 'duration' at 0x16773de50>
DEBUG:root:index= 0
DEBUG:root:-------- parsing necrosis!
DEBUG:root: >> pd_uep =<Element 'phase_durations' at 0x16773d090>
DEBUG:root:<Element 'duration' at 0x16773d180>
DEBUG:root:index= 0
DEBUG:root:<Element 'duration' at 0x16773d310>
DEBUG:root:index= 1
DEBUG:root:volume_path=.//cell_definition[1]//phenotype//volume//
DEBUG:root:
===== populate_tree():  mechanics
DEBUG:root:mechanics_path=.//cell_definition[1]//phenotype//mechanics//
DEBUG:root:---- cell_interactions_path= .//cell_definition[1]//phenotype//mechanics//cell_adhesion_affinities
DEBUG:root:---- found cell_adhesion_affinities_path:
DEBUG:root:--> {'ECM': '1'}
DEBUG:root:--> {'ECM': '1', 'pusher': '0.0'}
DEBUG:root:
===== populate_tree():  motility
DEBUG:root:motility_path=.//cell_definition[1]//phenotype//motility//
DEBUG:root:
----------- populate_tree_cell_defs.py: cell_def_name= ECM,  cell_def_tab.param_d[cell_def_name]["motility_chemotaxis_substrate"] = quorum factor
DEBUG:root:motility_advanced_chemotaxis_path= .//cell_definition[1]//phenotype//motility//options//advanced_chemotaxis//
DEBUG:root:chemotactic_sensitivity= {'quorum factor': '0.0'}
DEBUG:root:sensitivity_path= .//cell_definition[1]//phenotype//motility//options//advanced_chemotaxis//chemotactic_sensitivities
DEBUG:root:---- found chemotactic_sensitivities: <Element 'chemotactic_sensitivities' at 0x167cfa540>
DEBUG:root:subelm=<Element 'chemotactic_sensitivity' at 0x167cfa680>
DEBUG:root: chemotactic_sensitivity--> quorum factor = 0.0
DEBUG:root:{'quorum factor': '0.0'}
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = quorum factor
DEBUG:root:    motility_advanced_chemotaxis_substrate= quorum factor
DEBUG:root:   chemotactic_sensitivity = {'quorum factor': '0.0'}
DEBUG:root:
===== populate_tree():  secretion
DEBUG:root:secretion_path = .//cell_definition[1]//phenotype//secretion//
DEBUG:root:uep_secretion = <Element 'secretion' at 0x167cfab80>
DEBUG:root:0) -- secretion substrate = quorum factor
DEBUG:root:------ done parsing secretion:
DEBUG:root:
===== populate_tree():  cell_interactions
DEBUG:root:---- cell_interactions_path= .//cell_definition[1]//phenotype//cell_interactions
DEBUG:root:---- found cell_interactions:
DEBUG:root:uep2= <Element 'live_phagocytosis_rates' at 0x167cfae00>
DEBUG:root: live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0'}
DEBUG:root: attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0'}
DEBUG:root: fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:------ done parsing cell_interactions:
DEBUG:root:---- transformation_rates_path = .//cell_definition[1]//phenotype//cell_transformations//transformation_rates
DEBUG:root: transformation_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:------ done parsing cell_transformations:
DEBUG:root:
===== populate_tree():  molecular
DEBUG:root:
===== populate_tree():  intracellular
DEBUG:root:------ done parsing intracellular:
DEBUG:root:
===== populate_tree():  custom data
DEBUG:root:uep_custom_data= <Element 'custom_data' at 0x167680a90>
DEBUG:root:--------------- populate_tree: (empty)custom_data = {}
DEBUG:root:var.attrib.keys() = dict_keys(['conserved', 'units', 'description'])
DEBUG:root:populate: cell_def_name= ECM --> custom_data: {'sample': ['1.0', False]}
DEBUG:root:----- cell_def.tag= cell_definition
DEBUG:root:
--------new_interaction_params(): cdname_new= pusher
DEBUG:root:
--------new_intracellular_params(): cdname_new= pusher
DEBUG:root:------- new_custom_data_params() -----
DEBUG:root:
===== populate_tree():  cycle
DEBUG:root: >> cycle_path= .//cell_definition[2]//phenotype//cycle
DEBUG:root:   cycle code= 5
DEBUG:root: >> phase_transition_path 
DEBUG:root:<Element 'rate' at 0x16827d770>
DEBUG:root:--  cycle_live_trate00 0.00
DEBUG:root: >> phase_durations_path =.//cell_definition[2]//phenotype//cycle//phase_durations
DEBUG:root: >> pd_uep =None
DEBUG:root:
===== populate_tree():  death
DEBUG:root:death_uep=<Element 'death' at 0x16827d5e0>
DEBUG:root:-------- parsing apoptosis!
DEBUG:root: >> tr_uep =<Element 'phase_transition_rates' at 0x16827d900>
DEBUG:root:death: phase_transition_rates= <Element 'rate' at 0x16827d8b0>
DEBUG:root:start_index= 0
DEBUG:root:-------- parsing necrosis!
DEBUG:root: >> tr_uep =<Element 'phase_transition_rates' at 0x16827db80>
DEBUG:root:death: phase_transition_rates= <Element 'rate' at 0x16827d0e0>
DEBUG:root:start_index= 0
DEBUG:root: --- transition rate 01 (float) = 9000000000.0
DEBUG:root:death: phase_transition_rates= <Element 'rate' at 0x16734d3b0>
DEBUG:root:start_index= 1
DEBUG:root: --- transition rate 12 (float) = 1.15741e-05
DEBUG:root:volume_path=.//cell_definition[2]//phenotype//volume//
DEBUG:root:
===== populate_tree():  mechanics
DEBUG:root:mechanics_path=.//cell_definition[2]//phenotype//mechanics//
DEBUG:root:---- cell_interactions_path= .//cell_definition[2]//phenotype//mechanics//cell_adhesion_affinities
DEBUG:root:---- found cell_adhesion_affinities_path:
DEBUG:root:--> {'ECM': '0.0'}
DEBUG:root:--> {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:
===== populate_tree():  motility
DEBUG:root:motility_path=.//cell_definition[2]//phenotype//motility//
DEBUG:root:
----------- populate_tree_cell_defs.py: cell_def_name= pusher,  cell_def_tab.param_d[cell_def_name]["motility_chemotaxis_substrate"] = quorum factor
DEBUG:root:motility_advanced_chemotaxis_path= .//cell_definition[2]//phenotype//motility//options//advanced_chemotaxis//
DEBUG:root:chemotactic_sensitivity= {'quorum factor': '0.0'}
DEBUG:root:sensitivity_path= .//cell_definition[2]//phenotype//motility//options//advanced_chemotaxis//chemotactic_sensitivities
DEBUG:root:---- found chemotactic_sensitivities: <Element 'chemotactic_sensitivities' at 0x16770af40>
DEBUG:root:subelm=<Element 'chemotactic_sensitivity' at 0x16770aae0>
DEBUG:root: chemotactic_sensitivity--> quorum factor = 0.0
DEBUG:root:{'quorum factor': '0.0'}
DEBUG:root:------ motility2_substrate_changed_cb(): idx = 0
DEBUG:root:   text (subname) = quorum factor
DEBUG:root:    motility_advanced_chemotaxis_substrate= quorum factor
DEBUG:root:   chemotactic_sensitivity = {'quorum factor': '0.0'}
DEBUG:root:
===== populate_tree():  secretion
DEBUG:root:secretion_path = .//cell_definition[2]//phenotype//secretion//
DEBUG:root:uep_secretion = <Element 'secretion' at 0x16770ad60>
DEBUG:root:0) -- secretion substrate = quorum factor
DEBUG:root:------ done parsing secretion:
DEBUG:root:
===== populate_tree():  cell_interactions
DEBUG:root:---- cell_interactions_path= .//cell_definition[2]//phenotype//cell_interactions
DEBUG:root:---- found cell_interactions:
DEBUG:root:uep2= <Element 'live_phagocytosis_rates' at 0x16770adb0>
DEBUG:root: live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root: attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root: fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:------ done parsing cell_interactions:
DEBUG:root:---- transformation_rates_path = .//cell_definition[2]//phenotype//cell_transformations//transformation_rates
DEBUG:root: transformation_rate= {'ECM': '0.0', 'pusher': '0.0', 'default': '0'}
DEBUG:root:------ done parsing cell_transformations:
DEBUG:root:
===== populate_tree():  molecular
DEBUG:root:
===== populate_tree():  intracellular
DEBUG:root:------ done parsing intracellular:
DEBUG:root:
===== populate_tree():  custom data
DEBUG:root:uep_custom_data= <Element 'custom_data' at 0x167f6cf90>
DEBUG:root:--------------- populate_tree: (empty)custom_data = {}
DEBUG:root:var.attrib.keys() = dict_keys(['conserved', 'units', 'description'])
DEBUG:root:populate: cell_def_name= pusher --> custom_data: {'sample': ['0.0', False]}
DEBUG:root:
----- update_motility_params():  cdname= ECM
DEBUG:root:     setting motility_substrate_dropdown (for cdname= ECM ) = quorum factor
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= ECM ) = quorum factor
DEBUG:root:    chemotactic_sensitivity= {'quorum factor': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = ECM
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = quorum factor
DEBUG:root:{'quorum factor': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:cell_def_tab.py: ------- fill_celltypes_comboboxes
DEBUG:root:ics_tab.py: fill_celltype_combobox(): ['ECM', 'pusher']
DEBUG:root:

------------  user_params_tab: fill_gui --------------
DEBUG:root:uep_user_params= <Element 'user_parameters' at 0x167f6cc20>
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x1563c8590>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0', '': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0', '': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x1563c8590>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0', '': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x1563c8590>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0', '': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x1563c8590>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '1.0', '': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0', '': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x1563c8590>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0', '': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673e1dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673e1040>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673e7d30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684b7eb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f39040>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677976d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168293850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168208d90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673e7730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168208610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f39e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684a9dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167655a90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16773e670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d7d5e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167744e20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d660a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167725250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16757ad00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167744430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676b0460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168488070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167785850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1563ee040>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676552e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167474bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d445b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16772be50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676922e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c20a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167cae9a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168488070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d7ddf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167746280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682082b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d5b5e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168488f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c2790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16756b610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677d4d90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168443250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d545e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16769ec70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16775c730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16775c7c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fa6a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680ddd30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fa2e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e23310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167665f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b57c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677857f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16764fca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167564940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677d8970>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16774deb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167397bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674006d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680d8b20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f39670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16847d400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674cbfd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c21f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167342ca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677e1a30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682c16a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167c67a00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167771640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167df51c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d7d610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167692cd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16733f070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f89340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16757a700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167432be0>
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x1563c8590>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0', '': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167e4f280> <matplotlib.colors.Normalize object at 0x167e4f280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167556c40>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167e4f280> <matplotlib.colors.Normalize object at 0x167e4f280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167556c40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167623250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f39370>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x1680ff820> <matplotlib.colors.Normalize object at 0x1680ff820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675196a0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x1680ff820> <matplotlib.colors.Normalize object at 0x1680ff820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675196a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e178b0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x168443910> <matplotlib.colors.Normalize object at 0x168443910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684b7730>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x168443910> <matplotlib.colors.Normalize object at 0x168443910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684b7730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167519e50>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16760c0d0> <matplotlib.colors.Normalize object at 0x16760c0d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16760c880>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16760c0d0> <matplotlib.colors.Normalize object at 0x16760c0d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16760c880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167655e50>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167432070> <matplotlib.colors.Normalize object at 0x167432070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167432850>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167432070> <matplotlib.colors.Normalize object at 0x167432070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167432850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168293550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167556a00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c2640>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x168430880> <matplotlib.colors.Normalize object at 0x168430880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684b7070>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x168430880> <matplotlib.colors.Normalize object at 0x168430880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684b7070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680d87f0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167432940> <matplotlib.colors.Normalize object at 0x167432940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e4fe20>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167432940> <matplotlib.colors.Normalize object at 0x167432940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e4fe20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e4f7c0>
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x1563c8590>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0', '': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x1682792e0> <matplotlib.colors.Normalize object at 0x1682792e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f7a160>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x1682792e0> <matplotlib.colors.Normalize object at 0x1682792e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f7a160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f32cd0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x1684dfa60> <matplotlib.colors.Normalize object at 0x1684dfa60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684b75e0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x1684dfa60> <matplotlib.colors.Normalize object at 0x1684dfa60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684b75e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676658b0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167e4f370> <matplotlib.colors.Normalize object at 0x167e4f370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168279910>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167e4f370> <matplotlib.colors.Normalize object at 0x167e4f370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168279910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168265400>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167698280> <matplotlib.colors.Normalize object at 0x167698280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167519b20>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167698280> <matplotlib.colors.Normalize object at 0x167698280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167519b20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d7d6d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fb670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675bff70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1563ee370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167796310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674322b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167600640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676a5cd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e336d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168208fd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680ff940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x157da3730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e38700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168279d00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167753e20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677193a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d7d730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167740cd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f65a30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f9f100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167655820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16760c2b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673e7af0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168293eb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677faaf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677383d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16731d880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167760940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f3cc40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167dfb880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167cae5b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16746b490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16847d9a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167dfb250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16737e2e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167665580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684721c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167397910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16737e0d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674f87f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16757a880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f8d7c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f9d3a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fa850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673e7eb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e7a4c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680dd190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676986a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16769eee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168208610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674244c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16756b0a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16773e2b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673a6250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16766bd60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167df5b20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167c67f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f6d3a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684b7c10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167432a00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168279820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16756b8b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16743b820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168208970>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x144518dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676232e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675bfc40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167705130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676b06d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e42e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167705b20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167519c40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16810e370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167378910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167cae340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676463d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16766bf10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167771850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676233a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168293460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674cb370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167513280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f8a3a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167769340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f32e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c2d30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f63580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167655340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167edf970>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16849f6d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c2c10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b4130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d76820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b5130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167678b20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168279f70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e1e640>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167d54b50> <matplotlib.colors.Normalize object at 0x167d54b50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16756b760>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167d54b50> <matplotlib.colors.Normalize object at 0x167d54b50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16756b760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16773ea60>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167dfb100> <matplotlib.colors.Normalize object at 0x167dfb100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16772df40>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167dfb100> <matplotlib.colors.Normalize object at 0x167dfb100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16772df40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167623d00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16772d520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167796eb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e75430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676c0a30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c2880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e7aa60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167555d60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675ba520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168293850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167397df0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168443e20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167719070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167623100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167655460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e7a8e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675ba880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b4910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677420d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16737e3a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168293070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167771400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e75130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167435d30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e17640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680d8610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16760fe20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673e76a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167435a90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676718b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675bf310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167705850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682939d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f6d9d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x166fa82e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674cb970>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16775c970>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e75550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fabb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167655df0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d5d970>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d49a90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16743b3d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677965b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675bf640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677c5c40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675bff10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e7e460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167dfb7c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16768d460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c2e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167740a30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16772b460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16775c850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16811e2b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16757af70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f6df70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167692340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e17070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16737e310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f71e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e75d00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168279610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673e7c40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167513070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168279f70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d54340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d66100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167cae5e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677e75b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673e77c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16756bee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167723340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168443520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16738cca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167705c70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16756bb80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16771db50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167cae820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16772b1c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16773e790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684a13a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167cae8b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167584f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16738c070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167771fd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167342220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16773e3a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167785760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684b7370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d7db20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e85730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16769e9d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682c1430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167df71c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167519b80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16738ca90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680dd4f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677e2e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167435220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684965e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e43e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677711c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d66d60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16755d250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677dfd90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b5670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167760f70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167df5850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167760d60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16847d520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f27d90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168496220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e7e9d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168496400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675a87c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168443070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677605e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16773ee50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167705850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16772b9a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167432bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16760fbe0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677718e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16776e700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684b7160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16769e9d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ee8cd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16760fd00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b5fd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16776e3d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f398e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16751e6a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e47580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e17520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167692dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e17160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167771850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16737e970>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680dda30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e52c70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167797bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16773ec40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d547c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682939d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16769ea60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e7ac40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ed8d60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f6d310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e52910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167378ac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d71fa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d666a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e758b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16751ee20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167797400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16773e040>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167397610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676a5be0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676550d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167df5550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16756b460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680dd190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167513a60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16777d550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16774d520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167435f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168496d30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167796df0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e172b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167644100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b5280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b54f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d7dd90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ed8100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167774f70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675a87c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167633f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d7d7c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675baaf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16772a1c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167645c70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16743b100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675ba640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168443e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677ee3d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677de310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677d37c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167633190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16768d1f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16756b580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16768d400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168265df0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675ba2e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e5f790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16743b670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673a6430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167513ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16757b160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167397280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16767a6d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167633a60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684e7130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fa490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e4fc40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f23dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16757a8b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16751e370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167519cd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167655c10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676330a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16769ef70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d7db80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682086d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16768db50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167744df0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16775cac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16756b1f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e75df0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675abc40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677f7670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ed8c70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16847bc40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684af490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16756ba00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b5a90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684843d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16757ab80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16764dd90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e46be0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674cb100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d66160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16738c100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677605b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167519700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168469700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16766c3d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167741d60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16775c1f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167474e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677965b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f3ca30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675a8610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e4f220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680dd9a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168469dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676a5a90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676b0850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fabb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167dfbfa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167744520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e16910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16845c9a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167760b80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e753d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677975e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ed88b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167698e20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167642430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16738c790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167545280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167df6dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167dfb340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167760580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16751e9a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680d8310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fa7f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677d8c40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167dfa610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c5100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167584670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168279a30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d666a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676559a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ebaa30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167dfb430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167705370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675bae80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167397c40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167432cd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167692eb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682c1880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167dfa8e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167745be0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167cae8b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676313a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16765bb20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16765f100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167665e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f9ad90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e4fc70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16737e5e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675bfa00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167740f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167692700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e44a90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677cbeb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d7d250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16772b0a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675841c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16738cf70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676554f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168279e20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e17970>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16764da60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167797460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d669d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167519b50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167692760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168443be0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680d8be0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f839d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f77ac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16772b5e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684e7dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168293190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167474d90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16737ef40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167785b20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168293f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675ba250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fad90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e41a90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676b0ca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167513760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677df790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16768de50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e910d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16764da30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fa4f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e4f220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c29a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d66730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167623d00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f547f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675131c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677966d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167623fa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f91be0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167753670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e75160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675aa5b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167513e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167caecd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168208970>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fa7f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fa6d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16758faf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16751eb20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f6df70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167cae520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16847d8b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684e7d90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f72df0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c5dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167623c70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16751ebb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x157daf0d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16751e310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673e1bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c27f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16764d400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680d8dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167570ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167797550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167eeb370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f6b2e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16758f160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f9db50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168119c10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x106386670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16775c3a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fa340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167623310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ed8b50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e450d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675aa3d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167796880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e433d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e419a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16849ac40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167dfbe20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684a83a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676b09a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c54c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676b08b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167705160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167397df0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673e7dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677d9e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167cae310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c2e20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675bf550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167eb7e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677f9910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167432910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fa280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167705a90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ed3ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f44ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167751ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675aeca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d54c70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167432d60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680d8c70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167655f70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16756bcd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b5160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fa910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677dc2b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677d3df0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675ba7f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677db160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168443400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16757a760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c7430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682935e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16772b7c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675bf670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16775d700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682083d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e552b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684a4100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f5b880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16849e130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674cbeb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167644460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167744ca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16847d670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675a8580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f5bbe0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16843d0a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ebf7c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167dfb5b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167dfeca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682085e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ed84c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167623fa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168265be0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b5100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167cae6d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167659a90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167c67dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168265cd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16772bf40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168443b50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e75b80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f27310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e4f430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16773eb20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c2310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d7dc70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e19820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168100a60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16760c490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167556190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167caef70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16743bca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673e7400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d51250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d4b2b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16757a1f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f6d460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167736fa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e7a670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16757a490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167797b20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674091c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675beb80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167705e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167665eb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682c15e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676075b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673a63d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167513c70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16849f790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167665fd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167771850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167474dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16751e040>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16757a940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ee7fa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167435880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167caefd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167eefc40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673e7f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e7a070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e7a190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167dfb100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167740220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e3fb80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167dfbf70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168293bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16758ecd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167dfbc10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ee56d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677df4f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167785af0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167623dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c2700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168265310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e7a3a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684cb550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c24c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167435490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167432fa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d71c70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675a8790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167542df0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677df310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c24c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e75f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677df880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ef2d30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674cb850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167749280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16756b580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16774f1c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f99940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d66b50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167711b20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167744be0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167744340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16772c700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167665cd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682c13a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676922e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167435550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676016a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16757a1c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167623640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d66ac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167474340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677faa30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f6d280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e758b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684ee190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16775c1f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fafa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167655bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677446d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677175e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167796280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16772bb20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675437c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e4fc40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16756bfd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16769e160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167caec70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16849c250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677287f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684ec520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167378dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16756b4f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167361df0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e7ab20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168279940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674133a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675ba820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16773e430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167413310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16775c160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167711eb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684b7fa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680ddca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167744640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167df6f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e170d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684b74f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16768d520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680dd850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677967c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167397eb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167607e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16738c6d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d7da90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16731d580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b5f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167665550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167419580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677963d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f9fbe0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16738c250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ee3400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167601c70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167741550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16760f640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f6dd90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167474670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f7fa00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684dc4c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f7f460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684b40a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167378df0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f382e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e894c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168480940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167785940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ebee50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167785e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673e18b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f90400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167698400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167665e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167584280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167771490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d546d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d66580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d7d130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b5e20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167dfbfd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168293610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167519e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16773eee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ef1940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682087c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167623250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677df340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167760130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16737ec70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16757d970>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677dfb20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167eedb50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167771730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e4ff10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167744490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167744d30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168486580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676cb340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684cf160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e17f70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e8be20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e7ae80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682656d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674cba30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d50370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680ddbb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e7a520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f36ca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16760ceb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675a8790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167598dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677d2b20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680d89d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673e7be0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167705400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682085b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676231c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f34220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e83880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167796730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167760130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675a4f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168208ac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167584f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168488760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ed1190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167705040>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d662b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e92c10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167692790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168443a00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676b0e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676b0ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16743b100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677057f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167dfb550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d541c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b5ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e17220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682794f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167771b50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168293550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167744e20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f6b610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d7d760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684ec790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e926d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d4da00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fa9d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16768ddf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682c1670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e83190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e4fa30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168293220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674cba00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167760a60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e5f340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167705ca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e5fb20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f6d880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680d8ac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167cae400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16756b670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676b08b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16775ca60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x157d25250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16765bdc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167cae8e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d7d9a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168481910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16847da60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167774640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167c67dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16767ab50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167dfb070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167453970>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673e1310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16757a5b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f50c70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682c1f70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676929d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684b7ca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674cbc70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677dfa30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682c10a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167519e20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168279bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b58b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167c67400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x157d251f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e820d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674cb8e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167771490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b59d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168443d60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675ba370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16774ae20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fae50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675ba100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16847d370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677743d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676017c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167785340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675bf430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16775c1c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167760670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168208df0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e17d30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167605430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16762e460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167665460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16765da90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676eed90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677858e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168293b80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16743b8e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168279100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167623f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676339a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676d0340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16772b5b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e70460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682c16d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f7e730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f7ec10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168486a60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673e18b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167740940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676d0a00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677ccbe0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168499070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16757a6a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f63250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167609040>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ed15e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674cb460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674cb580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167660c40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167cae8b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16760caf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16751e7f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167760730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e17fd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167555fd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16772bfa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d54b20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167674460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f6d220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684b7310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e6b8e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680d8b80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677cb580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167641f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675bfc10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d661c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167760fd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16751eee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167774100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167705160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167513670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e7f130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ed5c70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167559610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167513250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167655dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fa250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675babb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167692490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675bfa90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c54c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1563e8e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167692f70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682c17c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d54d60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676593a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ef17f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167519640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167785b20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x157d253a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c5550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c5e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167771580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676b0fa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167676e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16743ba60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16769ec10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fad30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e751f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167744eb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168443e20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680d8460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167785bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167513550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674327c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16772b7c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684678e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16772b850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673e7130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167744250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16764f070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675baf10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677df700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16760ca30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ee8cd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684eca30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677df940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d50340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16768d130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167c67040>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d50f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16772bca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e34700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16756fdf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677db4c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677483d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16775ca60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167631370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d67bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167797e20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167474ca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167655040>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167eb22b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676235b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16847d850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677971c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f7e250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677236d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674cb8e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c5d30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684b77c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e7a3d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677c8670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167432dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16768dc70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167655190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167705af0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676b0070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167760d90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16768d340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b5a30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16768d070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167519f70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c25e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167dfb880>
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x1563c8590>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0', '': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x1676d3fa0> <matplotlib.colors.Normalize object at 0x1676d3fa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676c0880>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x1676d3fa0> <matplotlib.colors.Normalize object at 0x1676d3fa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676c0880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167519c70>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x1684b7880> <matplotlib.colors.Normalize object at 0x1684b7880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168443d60>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x1684b7880> <matplotlib.colors.Normalize object at 0x1684b7880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168443d60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167785a00>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167519bb0> <matplotlib.colors.Normalize object at 0x167519bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675bfa30>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167519bb0> <matplotlib.colors.Normalize object at 0x167519bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675bfa30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fb730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b5790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677ce130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167519a60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167c67f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682c1e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167584850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16775c790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676c5250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167692580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167432490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d66fd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167432cd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674328b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167692b20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167519d00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168477a60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167548a60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167342af0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e6b9d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673e7af0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16773e9d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680d8940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e7ab20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e4faf0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167432550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16737e9a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168265a00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167404340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b50a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16766d580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167702b20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676ee220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16743b8e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677ee910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673e1820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168135130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e4f100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676debb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677dfc10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675842b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c5730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680d8820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e7abe0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167df5310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684dcc70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676eee20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167665e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677faf70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167692400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167cae550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167623eb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f2a3d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167760820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167df54c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167cae4c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16761c730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675ba910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c5e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677445b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167342610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684b31f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f7ee50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e1a610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16772b220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682933d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167432130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677966a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168467e20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675ba5e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f7e520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167df52e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167611f70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16751e2b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167c67610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c2f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167702730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680dd490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676a5d00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16776d5b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167607760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16756b790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e75160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167797790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673e7c70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677dcb80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167548700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167785310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674328b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168279460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167cae310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16769eac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676551f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fa970>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d67190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d59a60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e6b280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d671f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676233d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167797820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167797b80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167dfbac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682938e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167655d90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16776d910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d54b80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677854c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f7e040>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c57f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167740d00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e17a60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167eef850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168495f10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16757a400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673a6a90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b51c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d64850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16743b4f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167627d00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674cb070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168208790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16773e280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167432190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16847d190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d54c10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d54af0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ea4f70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682652e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f53280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c5b50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16760c580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168293460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167432070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f8fe20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16847d310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16743b5b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167584520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675ba190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674cc940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674351c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684ec940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d54850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16847d700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167568970>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676d9670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f53ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16775c490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16847d9d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d54760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677608b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684cb970>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676a50d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684b71f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676b0700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167c67e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167760c40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16847d880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168108f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167744070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680d8be0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677976a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674328e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fa4c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168265a00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e6b4c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16776d760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167623a30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f205b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674cb4f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f967f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ef3940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f63760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167655b50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1563ee4f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16847d1c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673e7850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f84e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167432a00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167df5ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f7ed30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16760c100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c5c70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16733f250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676654c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675bf3d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d7d430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167705af0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e4fe50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168293e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676654c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167750700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16772b310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680d8d90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168110fa0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167744460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167771850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167760490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684b7730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e6b6a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167dfb130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673e14c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680d8670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675bf640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676d7c10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167519160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167623280>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674097f0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167d66b50> <matplotlib.colors.Normalize object at 0x167d66b50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675a8d30>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167d66b50> <matplotlib.colors.Normalize object at 0x167d66b50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675a8d30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1563f7f70>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16757a310> <matplotlib.colors.Normalize object at 0x16757a310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e7ac70>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x16757a310> <matplotlib.colors.Normalize object at 0x16757a310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e7ac70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674cb5e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ea4c10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675ba040>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1681107f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167361430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d7d2b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d57d90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16768d220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680d8fd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675ba370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684917f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16775c040>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1681399d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676659d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16737e760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673975b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675132b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167744490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168434c10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e00070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16743b940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676651f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fa1f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16757a9a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16771d3d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167705370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675bf340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f7e3a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b5850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16738c6a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682659d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680ddf70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e4f6a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167665040>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167655820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677441f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677781c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e75640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f84040>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c5a00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f849d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167760220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167713bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675bf820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fa850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167df5f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16772b5e0>
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x1563c8590>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0', '': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x1677df4c0> <matplotlib.colors.Normalize object at 0x1677df4c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16760cac0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x1677df4c0> <matplotlib.colors.Normalize object at 0x1677df4c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16760cac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e75220>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167e19be0> <matplotlib.colors.Normalize object at 0x167e19be0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e7a8e0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167e19be0> <matplotlib.colors.Normalize object at 0x167e19be0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e7a8e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676556d0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167ed6580> <matplotlib.colors.Normalize object at 0x167ed6580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676a5df0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167ed6580> <matplotlib.colors.Normalize object at 0x167ed6580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676a5df0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16751e3a0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167665700> <matplotlib.colors.Normalize object at 0x167665700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676109a0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167665700> <matplotlib.colors.Normalize object at 0x167665700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676109a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167610790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167797e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682653d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ec5f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e4fc70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16757a5e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16775cb50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c5eb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167797f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16756b970>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16743b3a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b5ac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167692c40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16756bca0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167744a00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16757ac70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684ea460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167785c40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167676430>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673e1fd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ed6070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684a5eb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ef1520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16764f8b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167796df0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b5880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b5340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677976d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167796790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e75550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684acbe0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f7e6d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c5df0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e7a8b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674cb910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ed6940>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c0d30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1676925b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167513910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e7a640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16847df10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167655d90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e4ff10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684ecd00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b53a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684ec880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fa250>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167caec70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167598700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f70610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684a8550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e00a00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16777ea90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167658670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16757f9a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167633160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167575640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f41610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167564580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16812d730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684bbf10>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e6b190>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e24700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167665070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f7e910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16765dac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167ed6310>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16810c880>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677df580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16775c7f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167519490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16760ceb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e7a490>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e24610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e17370>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16847db50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680ddcd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1682c1d60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167797700>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684e6c40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16773ea30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e4f0d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167dfb130>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16768d580>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167755f70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16751e400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e542e0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c2e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167513a60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167665070>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675b5760>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c2a90>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677979d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167432ac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684c5f40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16768d040>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684eceb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167dfbe20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167796550>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167760ac0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167558e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16769e340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168279400>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16756bee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167474220>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16737e640>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167705a00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16765d4c0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167442e80>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168462d30>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e6b100>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674cbe50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e6a0a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674403d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168486340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684eceb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f96910>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16743b4f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d54bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167c67e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684434f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168293460>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e6b790>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684431f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16743be50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680dd3d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16756ba60>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1675ba850>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684ecbe0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16751ecd0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167692bb0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x168499940>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0', '': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0', '': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> transition rate
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>transition rate
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:key 0= pusher
DEBUG:root:keys 1= dict_keys(['ECM', 'pusher'])
DEBUG:root:keys 2= dict_keys(['ECM', 'pusher'])
DEBUG:root:
----- update_motility_params():  cdname= pusher
DEBUG:root:     setting motility_substrate_dropdown (for cdname= pusher ) = quorum factor
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= pusher ) = quorum factor
DEBUG:root:    chemotactic_sensitivity= {'quorum factor': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = pusher
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = quorum factor
DEBUG:root:{'quorum factor': {'secretion_rate': '0.0', 'secretion_target': '1.0', 'uptake_rate': '0.0', 'net_export_rate': '0.0'}}
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0', '': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x1563c8590>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0', '': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x1563c8590>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0', '': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x1563c8590>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0', '': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x14451b040>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677713d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167378820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674127f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167760e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167432520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167698520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167397e50>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167623730>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167655e20>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167dfb610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167679160>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1674740d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167f6d3a0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d54dc0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e70ee0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167796a00>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16756bc70>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167d7d0d0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167e4fc40>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167740970>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167361df0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1684b7340>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167584670>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16760c9a0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x1674cb2b0> <matplotlib.colors.Normalize object at 0x1674cb2b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167646820>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x1674cb2b0> <matplotlib.colors.Normalize object at 0x1674cb2b0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167646820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167665ee0>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167692820> <matplotlib.colors.Normalize object at 0x167692820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673a6520>
DEBUG:matplotlib.colorbar:colorbar update normal <matplotlib.colors.Normalize object at 0x167692820> <matplotlib.colors.Normalize object at 0x167692820>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1673a6520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1677fa610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167dfb610>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x167797520>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x1680dd4f0>
DEBUG:matplotlib.colorbar:locator: <matplotlib.ticker.AutoLocator object at 0x16738ca60>
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- apoptosis_phase_transition_cb: 
DEBUG:root:apoptosis: ------>> duration
DEBUG:root:apoptosis_phase_transition_cb: --> duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis_phase_transition_cb: NOT duration
DEBUG:root:
  ---- necrosis_phase_transition_cb: 
DEBUG:root:necrosis: ------>>duration
DEBUG:root:necrosis_phase_transition_cb: --> duration
DEBUG:root:key 0= pusher
DEBUG:root:keys 1= dict_keys(['ECM', 'pusher'])
DEBUG:root:keys 2= dict_keys(['ECM', 'pusher', ''])
DEBUG:root:
----- update_motility_params():  cdname= ECM
DEBUG:root:     setting motility_substrate_dropdown (for cdname= ECM ) = quorum factor
DEBUG:root:     setting motility2_substrate_dropdown (for cdname= ECM ) = quorum factor
DEBUG:root:    chemotactic_sensitivity= {'quorum factor': '0.0'}
DEBUG:root:new val = 0.0
DEBUG:root:----- leave update_motility_params()

DEBUG:root:update_secretion_params(): cdname = ECM
DEBUG:root:update_secretion_params(): self.current_secretion_substrate = quorum factor
DEBUG:root:{'quorum factor': {'secretion_rate': '0', 'secretion_target': '1', 'uptake_rate': '0', 'net_export_rate': '0'}}
DEBUG:root:----- chemo_sensitivity_changed() = 1
DEBUG:root:----- chemo_sensitivity_changed(): subname = quorum factor
DEBUG:root:     chemotactic_sensitivity (dict)= {'quorum factor': '1'}
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0', '': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0', '': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x1563c8590>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0', '': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
DEBUG:root:===========  run_model_cb():  ============
DEBUG:root:run_tab.py:  doing: mkdir output
DEBUG:root:
 ========================== run_tab.py: update_xml_from_gui(): self.xml_root = <Element 'PhysiCell_settings' at 0x1563c8590>
DEBUG:root:----------- microenv_tab.py: fill_xml(): ----------
DEBUG:root:microenv_tab.py: fill_xml(): num subtrates = 1
DEBUG:root:substrates_in_tree =['quorum factor']
DEBUG:root:microrenv_tab.py: key in param_d.keys() = gradients
DEBUG:root:microrenv_tab.py: key in param_d.keys() = track_in_agents
DEBUG:root:microrenv_tab.py: key in param_d.keys() = quorum factor
DEBUG:root:matched! quorum factor
DEBUG:root:

----------- cell_def_tab.py: fill_xml(): ----------
DEBUG:root:num cell defs = 2
DEBUG:root:cdefs_in_tree =['ECM', 'pusher']
DEBUG:root:
--- key in param_d.keys() = ECM
DEBUG:root:matched! ECM
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '1', 'pusher': '0.0', '': '1.0'}
DEBUG:root:ECM  --> 1
DEBUG:root:pusher  --> 0.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '1'}
DEBUG:root:quorum factor  --> 1
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= ECM
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= 
DEBUG:root:--- attack_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0', 'default': '0', 'pusher': '0.0', '': '0.0'}
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for ECM
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for ECM
DEBUG:root:

DEBUG:root:
--- key in param_d.keys() = pusher
DEBUG:root:matched! pusher
DEBUG:root:--- cell_adhesion_affinity= {'ECM': '0.0', 'pusher': '1.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 1.0
DEBUG:root:

 ====================> fill_xml_motility(): quorum factor = quorum factor 


DEBUG:root:fill_xml_motility(): {'quorum factor': '0.0'}
DEBUG:root:quorum factor  --> 0.0
DEBUG:root:self.substrate_list = ['quorum factor']
DEBUG:root:substrate = quorum factor
DEBUG:root:------------------- fill_xml_interactions():  cdef= pusher
DEBUG:root:--- live_phagocytosis_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:  key in live_phagocytosis_rate= ECM
DEBUG:root:ECM  --> 0.0
DEBUG:root:  key in live_phagocytosis_rate= default
DEBUG:root:default  --> 0
DEBUG:root:  key in live_phagocytosis_rate= pusher
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- attack_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:--- fusion_rate= {'ECM': '0.0', 'default': '0', 'pusher': '0.0'}
DEBUG:root:ECM  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:pusher  --> 0.0
DEBUG:root:ECM  --> 0.0
DEBUG:root:pusher  --> 0.0
DEBUG:root:default  --> 0
DEBUG:root:------------------- fill_xml_intracellular()
DEBUG:root:------ ["intracellular"]: for pusher
DEBUG:root:None
DEBUG:root:

DEBUG:root:------ ["custom_data"]: for pusher
DEBUG:root:

DEBUG:root:----------- end cell_def_tab.py: fill_xml(): ----------
DEBUG:root:
--------- user_params_tab.py:  fill_xml(): self.count = 125
DEBUG:root:--------- found //user_parameters
DEBUG:root:random_seed
DEBUG:root:number_of_cells
DEBUG:root:found 2
